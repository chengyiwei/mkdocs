{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"A/A-A/about/","title":"about","text":""},{"location":"A/A-A/about/#_1","title":"\u7ebf\u6027\u4ee3\u6570","text":""},{"location":"A/A-A/about/#_2","title":"\u77e9\u9635\u4e58\u6cd5","text":"\\[ c_{ij}=\\sum_{k=1}^n a_{ik}b_{kj} \\] <p>\u6211\u4eec\u5b9a\u4e49\u4e86\u4e58\u6cd5\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4f7f\u7528\u5feb\u901f\u5e42\u6765\u5b9e\u73b0\u77e9\u9635\u8fd0\u7b97</p> <p>\u5e38\u89c1\u7684\u9012\u63a8\u5f62\u5f0f</p> <ol> <li>\\(f(n)=a_1f(n-1)+a_2f(n-2)+\\cdots+a_kf(n-k)\\)</li> </ol> \\[ \\begin{pmatrix} f(n) \\\\ f(n-1)\\\\ f(n-2)\\\\ \\vdots\\\\f(n-k+1) \\end{pmatrix} =\\begin{pmatrix} a_1 &amp;a_2 &amp;\\cdots &amp;a_k \\\\ 1 &amp; 0 &amp; \\cdots &amp; 0\\\\ 0&amp; 1&amp; \\cdots &amp;0\\\\ \\vdots&amp; &amp; \\ddots  &amp;\\vdots\\\\0 &amp; \\cdots &amp; 1 &amp; 0 \\end{pmatrix} \\begin{pmatrix} f(n-1) \\\\ f(n-2)\\\\ f(n-3)\\\\ \\vdots\\\\f(n-k) \\end{pmatrix} \\] <ol> <li>\\(f(n)=a_1f(n-1)+a_2f(n-2)+C\\)</li> </ol> \\[ \\begin{pmatrix} f(n) \\\\ f(n-1)\\\\1 \\end{pmatrix} =\\begin{pmatrix} a_1 &amp;a_2 &amp;C \\\\ 1 &amp; 0 &amp; 0\\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} f(n-1) \\\\ f(n-2)\\\\1 \\end{pmatrix} \\] <p>\u5f53\u7136\uff0c\u8fd9\u79cd\u5f62\u5f0f\u5f88\u5bb9\u6613\u63a8\u5230\u5230\u6709 \\(k\\) \u9879\u7684\u5f62\u5f0f</p> <ol> <li>\\(f(n)=a_1f(n-1)+a_2f(n-2)+c_2n^2+c_1n+c_0\\)</li> </ol> \\[ \\begin{pmatrix} f(n) \\\\ f(n-1)\\\\(n+1)^2\\\\n+1\\\\1 \\end{pmatrix} =\\begin{pmatrix} a_1 &amp;a_2 &amp;C_2&amp;C_1&amp;C_0 \\\\ 1&amp;0&amp;0&amp;0&amp;0\\\\ 0&amp;0&amp;1&amp;2&amp;1\\\\ 0&amp;0&amp;0&amp;1&amp;1\\\\ 0&amp;0&amp;0&amp;0&amp;1 \\end{pmatrix} \\begin{pmatrix} f(n-1) \\\\ f(n-2)\\\\n^2\\\\n\\\\1 \\end{pmatrix} \\] <ol> <li>\\(f(n)=a_{11}f(n-1)+a_{12},g(n)=a_{21}f(n-1)+a_{22}g(n-1)\\)</li> </ol> \\[ \\begin{pmatrix} f(n) \\\\ g(n) \\end{pmatrix} =\\begin{pmatrix}  a_{11}&amp;a_{12}\\\\ a_{21}&amp;a_{22} \\end{pmatrix} \\begin{pmatrix} f(n-1) \\\\ g(n-1) \\end{pmatrix} \\] <p>\u8fd9\u4e2a\u662f\u4e24\u4e2a\u51fd\u6570\u76f8\u4e92\u6709\u5173\u7cfb\uff0c\u4f46\u8fd9\u4e9b\u5173\u7cfb\u90fd\u662f\u7ebf\u6027\u7684</p> <ul> <li> <p>\u53ef\u4ee5\u628a\u77e9\u9635\u8fd0\u7b97\u770b\u6210\u548c\u6570\u503c\u7684\u8fd0\u7b97\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7b49\u6570\u636e\u7ed3\u6784\u7ef4\u62a4</p> </li> <li> <p>\u52a8\u6001DP</p> </li> </ul>"},{"location":"A/A-A/about/#_3","title":"\u9ad8\u65af\u6d88\u5143","text":"<p>\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6709 \\(m\\) \u4e2a\u4e00\u6b21\u65b9\u7a0b\uff0c\\(n\\) \u4e2a\u53d8\u91cf\uff0c\u628a\u6240\u6709\u7684\u7cfb\u6570\u5199\u6210\u4e00\u4e2a \\(m\\) \u884c \\(n\\) \u5217\u7684\u77e9\u9635\uff0c\u628a\u6bcf\u4e2a\u65b9\u7a0b\u7b49\u53f7\u53f3\u4fa7\u7684\u5e38</p> <p>\u6570\u653e\u5728\u6700\u53f3\u5217\uff0c\u5f97\u5230\u4e00\u4e2a \\(m\\) \u884c \\(n+1\\) \u5217\u7684\u589e\u5e7f\u77e9\u9635</p> <p>\u9ad8\u65af\u6d88\u5143\u901a\u8fc7\u591a\u6b21\u53d8\u6362\u628a\u65b9\u7a0b\u7ec4\u8f6c\u5316\u4e3a\u591a\u4e2a\u4e00\u5143\u4e00\u6b21\u65b9\u7a0b</p> <p>\u9ad8\u65af\u6d88\u5143\u5177\u4f53\u6b65\u9aa4\uff1a</p> <ul> <li>\u679a\u4e3e\u6bcf\u4e00\u5217\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a</li> </ul> <p>\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u89e3\u6709 \\(3\\) \u79cd\u60c5\u51b5\uff0c\u6709\u552f\u4e00\u89e3\uff0c\u6709\u65e0\u7a77\u591a\u89e3\uff0c\u65e0\u89e3</p>"},{"location":"A/A-A/about/#-","title":"\u9ad8\u65af-\u7ea6\u5f53\u6d88\u5143\u6cd5","text":"<p>\u9ad8\u65af-\u7ea6\u65e6\u6d88\u5143\u6cd5\u7684\u524d\u63d0\u662f \uff08\u5047\u8bbe\u6709\u552f\u4e00\u89e3\uff09</p> <p>\u6d88\u5143\u8fc7\u7a0b\u5982\u4e0b</p> <ol> <li>\u4ece\u7b2c \\(1\\) \u5217\u5f00\u59cb\uff0c\u9009\u62e9\u4e00\u4e2a\u975e \\(0\\) \u7684\u7cfb\u6570\uff08\u4e00\u822c\u662f\u6700\u5927\u503c\uff09\u6240\u5728\u7684\u884c\uff0c\u628a\u8fd9\u4e00\u884c\u4e0e\u7b2c\u4e00\u884c\u4ea4\u6362\uff0c\u6b64\u65f6 \\(x_1\\) \u662f\u4e3b\u5143</li> <li>\u628a \\(x_1\\)  \u7684\u7cfb\u6570\u8f6c\u6362\u6210 1</li> <li>\u5229\u7528\u4e3b\u5143 \\(x_1\\) \u7684\u7cfb\u6570\uff0c\u628a\u5176\u4ed6\u884c\u7684\u8fd9\u4e00\u5217\u7684\u4e3b\u5143\u6d88\u53bb</li> <li>\u91cd\u590d\u4ee5\u4e0a\u6b65\u6570\uff0c\u76f4\u5230\u628a\u6bcf\u884c\u90fd\u53d8\u6210\u53ea\u6709\u5bf9\u89d2\u7ebf\u4e0a\u5b58\u5728\u4e3b\u5143\uff0c\u4e14\u7cfb\u6570\u90fd\u4e3a \\(1\\)\uff0c\u5219\u7b54\u6848\u5c31\u662f\u6700\u540e\u4e00\u5217\u7684\u6570\u5b57</li> </ol> <p></p> <pre><code>std::string gauss(std::vector&lt;std::vector&lt;ld&gt;&gt; &amp;a) { // \u4f20\u5165\u589e\u5e7f\u77e9\u9635\n    int n = a.size();\n    int c = 0, r = 0;\n    for (c = 0, r = 0, c &lt; n; c ++) {\n        int tmp = r;\n        for (int i = r; i &lt; n; i++)\n            if (sgn(a[i][c]))\n                tmp = i;\n        if (sgn(a[tmp][c]) == 0)\n            continue;\n\n        std::swap(a[tmp], a[r]);\n\n        for (int i = n; i &gt;= c; i--)\n            a[r][i] /= a[r][c];\n\n        for (int i = r + 1; i &lt; n; i++)\n            if (sgn(a[i][c]))\n                for (int j = n; j &gt;= c; j--)\n                    a[i][j] -= a[r][j] * a[i][c];\n        r += 1;\n    }\n    if (r &lt; n) {\n        for (int i = r; i &lt; n; i++)\n            if (sgn(a[i][n]))\n                return \"NoSolution\";\n        return \"InfSolution\";\n    }\n\n    for (int i = n - 1; i &gt;= 0; i--)\n        for (int j = i + 1; j &lt; n; j++)\n            a[i][n] -= a[j][n] * a[i][j];\n\n    return \"OK\";\n}\n</code></pre>"},{"location":"A/A-A/about/#_4","title":"\u7ebf\u6027\u57fa","text":"<p>\u57fa\u662f\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u4e00\u4e2a\u5411\u91cf\u7a7a\u95f4\u53ef\u4ee5\u7531\u4e00\u7ec4\u57fa\u7ebf\u6027\u7ec4\u5408\u800c\u6210</p> <p>\u800c\u7ebf\u6027\u57fa\u6307\u7684\u662f\u6a21 \\(2\\) \u57df\u4e2d\u7684\u57fa</p> <p>\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u6837\u4e00\u79cd\u7ebf\u6027\u7684\u601d\u60f3\u5e26\u5230\u5f02\u6216\u4e2d\u53bb\u6765\u7ec4\u6210\u7ebf\u6027\u57fa</p> <p>\u7ebf\u6027\u57fa\u89e3\u51b3\u4ee5\u4e0b\u51e0\u7c7b\u95ee\u9898</p> <p>\u4ece \\(n\\) \u4e2a\u6570\u4e2d\u9009\u51fa\u4efb\u610f\u4e2a\u6570\uff0c\u4f7f\u5f97\u5f02\u6216\u548c\u6700\u5927</p> <p>\u4e00\u79cd\u6734\u7d20\u7684\u601d\u60f3\u662f \\(2^n\\) \u6b21\u66b4\u529b\u679a\u4e3e\uff0c\u4f46\u662f\u7531\u4e8e\u6bcf\u4e2a\u6570\u7279\u522b\u5c0f\uff0c\u53ef\u80fd\u6709\u591a\u4e2a\u7ec4\u5408\u80fd\u5f02\u6216\u6210\u4e3a\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7406\u8bba\u4e0a\u6765\u8bf4\u7b54\u6848\u53ea\u6709 \\(2^m\\) \u79cd\uff0c\\(m\\) \u4e3a\u6700\u5927\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570</p>"},{"location":"A/A-A/about/#_5","title":"\u7ebf\u6027\u57fa\u7684\u6784\u9020","text":"<ol> <li>\u975e\u9ad8\u65af\u6d88\u5143\u6784\u9020</li> </ol> <p>\u8003\u8651\u5230\u5982\u679c\u6bcf\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\u90fd\u4e0d\u540c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u96c6\u5408 \\(A\\) \u7684\u7ebf\u6027\u57fa\u5c31\u662f\u5b83\u672c\u8eab</p> <p>\u5982\u679c\u6709\u4e24\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\u76f8\u540c\uff0c\u90a3\u4e48\u901a\u8fc7 \\(a_1 \\oplus a_2\\) \u53ef\u4ee5\u628a\u6700\u9ad8\u4f4d\u53bb\u6389\uff0c\u6240\u4ee5\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u6570\u53bb\u5339\u914d\u4f4d\u6570\uff0c\u5982\u679c\u8fd9\u4e00\u4f4d\u6709\u6570\u4e86\uff0c\u90a3\u4e48\u5c31\u628a\u5f53\u524d\u679a\u4e3e\u7684\u8fd9\u4e2a\u6570\u6765\u5f02\u6216\u4e0a\u8fd9\u4e2a\u4f4d\u7684\u6570\uff0c\u4ee5\u6b64\u6765\u6d88\u53bb\u679a\u4e3e\u7684\u8fd9\u4e00\u4e2a\u6570\u7684\u8fd9\u4e00\u4f4d\u4e0a\u7684\u4e00</p> <ol> <li>\u9ad8\u65af\u6d88\u5143\u6784\u9020\u7ebf\u6027\u57fa</li> </ol> <p>\u5229\u7528\u9ad8\u65af\u6d88\u5143\u6765\u6784\u9020\u7ebf\u6027\u57fa\u4f1a\u66f4\u52a0\u76f4\u89c2 </p> <p>\u628a\u539f\u6570\u7ec4\u6784\u6210\u7684\u77e9\u9635\u8fdb\u884c\u9ad8\u65af\u6d88\u5143\uff0c\u5316\u6210\u7b80\u5316\u9636\u68af\u77e9\u9635</p> <p>\u5982\u679c\u540e\u9762\u6709\u5168 \\(0\\) \u9879\uff0c\u8bf4\u660e\u539f\u6765\u7684\u96c6\u5408 \\({A}\\) \u4e2d\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u5f02\u6216\u548c\u4e3a \\(0\\)</p>"},{"location":"A/A-A/about/#_6","title":"\u7ebf\u6027\u57fa\u7684\u5e94\u7528","text":"<p>\u6700\u5c0f\u5f02\u6216\u548c</p> <p>\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u6709 \\(0\\) \u5b58\u5728\u5373\u53ef</p> <p>\u6700\u5927\u5f02\u6216\u548c</p> <p>\u82e5\u7528\u57fa\u672c\u65b9\u6cd5\u6c42\u7ebf\u6027\u57fa\uff0c\u5bf9\u4e8e\u6700\u540e\u6c42\u51fa\u7684\u57fa \\(P\\) \uff0c\u4ece\u5927\u5230\u5c0f\u5c1d\u8bd5\u5f02\u6216\u6bcf\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u5f02\u6216\u8fd9\u4e2a\u5143\u7d20\u4f7f\u5f97\u7b54\u6848\u53d8\u5927\u7684\u8bdd\uff0c\u90a3\u5c31\u5f02\u6216\u5b83</p> <p>\u5982\u679c\u7528\u9ad8\u65af\u6d88\u5143\u7684\u65b9\u6cd5\u6c42\u7ebf\u6027\u57fa\uff0c\u7531\u4e8e\u53ea\u6709\u5bf9\u89d2\u7ebf\u4e0a\u5b58\u5728 \\(1\\) \uff0c\u90a3\u4e48\u628a \\(P\\) \u4e2d\u6240\u6709\u6570\u5b57\u5f02\u6216\u8d77\u6765\u5c31\u662f\u7b54\u6848</p> <p>\u7b2c \\(k\\) \u5927/\u5c0f\u5f02\u6216\u548c</p> <p>\u9ad8\u65af\u6d88\u5143\u540e\uff0c\u7b2c \\(k\\) \u5c0f\u5f02\u6216\u548c\u5c31\u662f\u9009\u4e0a \\(k\\) \u4e8c\u8fdb\u5236\u5206\u89e3\u540e\u4e3a \\(1\\) \u7684\u90a3\u4e9b\u884c</p> <pre><code>//\u5e26\u6c42\u7b2c k \u5927\u7684\u677f\u5b50\nstruct Linear_basis {\n    i64 num[70]{}, zero = 0;\n    const int B = 62;\n    bool insert(i64 x) {\n        for (int i = B; i &gt;= 0; i --) if (x &amp; (1ll &lt;&lt; i)) {\n            if (num[i]) x ^= num[i];\n            else {\n                num[i] = x;\n                return true;\n            }\n        }\n        zero ++;\n        return false;\n    }\n\n    i64 query_min(i64 x) {\n        for (int i = B; i &gt;= 0; i --)\n            x = std::min(x, x ^ num[i]);\n        return x;\n    }\n\n    i64 query_max(i64 x) {\n        for (int i = B; i &gt;= 0; i --)\n            x = std::max(x, x ^ num[i]);\n        return x;\n    }\n\n    i64 query_kth(i64 k) {\n        i64 x = 0;\n        k &gt;&gt;= zero;\n        std::vector&lt;i64&gt; p;\n        for (int i = 0; i &lt;= B; i ++) if (num[i]) p.emplace_back(num[i]);\n        for (int i = (int)p.size() - 1; i &gt;= 0; i --) {\n            if (k &amp; (1ll &lt;&lt; i)) x = std::max(x, x ^ p[i]);\n            else x = std::min(x, x ^ p[i]);\n        }\n        return x;\n    }\n} lb;\n</code></pre>"}]}